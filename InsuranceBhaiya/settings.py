"""
Django settings for InsuranceBhaiya project.

Generated by 'django-admin startproject' using Django 3.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages
import os, pymongo
import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

# atlas_client = pymongo.MongoClient('localhost', 27017)
atlas_client_connection = pymongo.MongoClient(f"mongodb+srv://{env('ATLAS_DB_USERNAME')}:{env('ATLAS_DB_PWD')}@{env('ATLAS_CLUSTER')}.pmwpdde.mongodb.net/?ssl=true&ssl_cert_reqs=CERT_NONE&retryWrites=true&w=majority", connect=False)

# Database 
ATLAS_DB = atlas_client_connection[env('DB_NAME')]  

# Alerts
MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
    }

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)


ALLOWED_HOSTS = ["www.insurancebhaiya.com", "insurancebhaiya.com", "3.24.136.167", "localhost"]


# Application definition
INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # MyApps
    'dashboard.apps.DashboardConfig',
    'authenticator.apps.AuthenticatorConfig',
    'main.apps.MainConfig',
    'api.apps.ApiConfig',
    # Other
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = False

# Add the allowed origins that match your trusted origins.
# For example:
CORS_ALLOWED_ORIGINS = [
    "https://www.insurancebhaiya.com",
    "https://insurancebhaiya.com",
    # Add more trusted origins if necessary
]

CSRF_TRUSTED_ORIGINS=[
    "https://www.insurancebhaiya.com",
    "https://insurancebhaiya.com",
]

# Optional: You can also specify other CORS settings if needed.
# For example:
CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']
CORS_ALLOW_HEADERS = ['Authorization', 'Content-Type']


ROOT_URLCONF = 'InsuranceBhaiya.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
                'auth_extras': 'InsuranceBhaiya.templatetags.auth_extras',
            }
        },
    },
]

WSGI_APPLICATION = 'InsuranceBhaiya.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# myproject/settings.py
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',    # To support session authentication (optional)
        'api.authentication.QueryParamAuthentication',  # Use this if you prefer query parameter authentication
        'rest_framework.authentication.TokenAuthentication',    # For API key authentication with headers
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # For token-based authentication
    ],
}

# Command to generate token
# python manage.py generate_anonymous_token
# GENERATED_TOKEN = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjkwNjk0MDk3LCJpYXQiOjE2OTA2OTM3OTcsImp0aSI6ImM1NGU1NTU3NTk1NDQxYzA4YzRkNWQwOWQ5NDdlNDUxIiwidXNlcl9pZCI6Ik5vbmUifQ.Dz3PAxO5oXCq_8_OuIIu0LX7YkhEzLXzixmXVF-Fo1U"
GENERATED_TOKEN = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjkwNjk0ODQ2LCJpYXQiOjE2OTA2OTQ1NDYsImp0aSI6IjEzZTUyNjhhMGViZDQ0MTg4YTk3MDRlZjhmOGViZWQzIiwidXNlcl9pZCI6Ik5vbmUifQ.lESFbFj8PD-ek7br2aU7ykIqDUoGW1rM_V3h1UsO_KQ"


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
